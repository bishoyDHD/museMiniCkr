# Check if cmake has the required version
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.3 FATAL_ERROR)
# Needed for cmake 2.6
IF(COMMAND cmake_policy)
	cmake_policy(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

# Set project name
PROJECT(LumiGEM)



# Set the library version
SET(LUMIGEM_MAJOR_VERSION 1)
SET(LUMIGEM_MINOR_VERSION 1)
SET(LUMIGEM_PATCH_VERSION 0)
SET(LUMIGEM_VERSION "${LUMIGEM_MAJOR_VERSION}.${LUMIGEM_MINOR_VERSION}.${LUMIGEM_PATCH_VERSION}")
LIST(APPEND LUMIGEM_LIBRARY_PROPERTIES VERSION "${LUMIGEM_VERSION}" SOVERSION "${LUMIGEM_MAJOR_VERSION}")



# find source and header files, set paths, includes...
SET(LIBNAME "PhysicsLumiGEM")


FILE(GLOB SRCS src/*.cpp)
FILE(GLOB HEADERS src/include/*.h ${CMAKE_SOURCE_DIR}/include/muserawtree.h)

SET(INCLUDES ${ROOT_INCLUDE_DIR} ${CLHEP_INCLUDE_DIRS}  "${CMAKE_CURRENT_SOURCE_DIR}/../LumiGEMlib/clustering" "${CMAKE_CURRENT_SOURCE_DIR}/../LumiGEMlib/tracking" "${CMAKE_CURRENT_SOURCE_DIR}/src/include" "${CMAKE_SOURCE_DIR}/include")
INCLUDE_DIRECTORIES(${INCLUDES})

MESSAGE(STATUS "INCLUDE_DIRECTORIES is ${INCLUDES}")

# create root dictionary
SET(LINKDEF ${CMAKE_CURRENT_SOURCE_DIR}/src/include/LinkDef.hh)
SET(DICTIONARY ${CMAKE_CURRENT_BINARY_DIR}/${LIBNAME}Dict.cpp)
ROOT_GENERATE_DICTIONARY("${HEADERS}" "${LINKDEF}" "${DICTIONARY}" "${INCLUDES}")
LIST(APPEND SRCS ${DICTIONARY})

# build the library
ADD_LIBRARY(${LIBNAME} SHARED ${SRCS})
TARGET_LINK_LIBRARIES(${LIBNAME} Plugin musetree LumiGEMlib "-L${ROOT_LIBRARY_DIR}" ${ROOT_LIBRARIES})

SET_TARGET_PROPERTIES(${LIBNAME} PROPERTIES ${LUMIGEM_LIBRARY_PROPERTIES})


# install the library
INSTALL(TARGETS ${LIBNAME} RUNTIME DESTINATION ${BINDIR} LIBRARY DESTINATION ${LIBDIR} ARCHIVE DESTINATION ${LIBDIR})

IF(INSTALL_HEADER)
	INSTALL(FILES ${HEADERS} DESTINATION ${INCDIR})
ENDIF(INSTALL_HEADER)


#set internal cache value to mark completion of first cmake run
SET(RERUN TRUE CACHE INTERNAL "Flag to mark completion of first cmake run" FORCE)

INSTALL (FILES init/PhysicsLumiGEM.xml DESTINATION "../shared/init" )
