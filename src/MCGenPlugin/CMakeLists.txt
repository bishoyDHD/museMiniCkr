# Check if cmake has the required version
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.3 FATAL_ERROR)
# Needed for cmake 2.6
IF(COMMAND cmake_policy)
	cmake_policy(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

# Set project name
PROJECT(MCGenPlugin)


SET(INCLUDES ${ROOT_INCLUDE_DIR} ${GSL_INCLUDE_DIR} "${CMAKE_CURRENT_SOURCE_DIR}/include" "${CMAKE_SOURCE_DIR}/include")

INCLUDE_DIRECTORIES(${INCLUDES})


SET(LINKDEF ${CMAKE_CURRENT_SOURCE_DIR}/src/include/LinkDef.hh)
SET(DICTIONARY ${CMAKE_CURRENT_BINARY_DIR}/MCGenPluginDict.cpp)
ROOT_GENERATE_DICTIONARY(${CMAKE_SOURCE_DIR}/include/MCGenPlugin.h "${LINKDEF}" "${DICTIONARY}" "${INCLUDES}")

# Set output path for libraries and executables within build directory (makes linking easier...)
SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/lib")
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin")


add_library(MCGenPlugin SHARED src/MCGenPlugin.cpp ${DICTIONARY} )
TARGET_LINK_LIBRARIES(MCGenPlugin Plugin musetree "-L${ROOT_LIBRARY_DIR}" ${ROOT_LIBRARIES})

# Add fPIC for amd 64bit systems
IF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")
SET_TARGET_PROPERTIES(MCGenPlugin PROPERTIES COMPILE_FLAGS -fPIC)
ENDIF("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")

INSTALL(TARGETS MCGenPlugin RUNTIME DESTINATION ${BINDIR} LIBRARY DESTINATION ${LIBDIR} ARCHIVE DESTINATION ${LIBDIR})

